version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=20.12.1
    ports:
      - "3100:3100"
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/mydb
      NEXT_PUBLIC_APP_URL: http://localhost:3100
      NEXT_PUBLIC_UNSPLASH_ACCESS_KEY: ${NEXT_PUBLIC_UNSPLASH_ACCESS_KEY}
      UPLOADTHING_SECRET: ${UPLOADTHING_SECRET}
      UPLOADTHING_APP_ID: ${UPLOADTHING_APP_ID}
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN}
      AUTH_GITHUB_ID: ${AUTH_GITHUB_ID}
      AUTH_GITHUB_SECRET: ${AUTH_GITHUB_SECRET}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET}
      AUTH_SECRET: ${AUTH_SECRET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PRICE_ID: ${STRIPE_PRICE_ID}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      NEXT_PUBLIC_API_URL: http://localhost:3100/api
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  drizzle:
    image: node:20.12.1-alpine
    working_dir: /usr/src/app
    command: ["npm", "run", "drizzle:generate"]
    volumes:
      - .:/usr/src/app
    depends_on:
      - db
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
